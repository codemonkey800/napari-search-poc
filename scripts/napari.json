[
  {
    "name": "elastix-napari",
    "summary": "A toolbox for rigid and nonrigid registration of images.",
    "description": "# elastix_napari\n\n[![License](https://img.shields.io/pypi/l/elastix_napari.svg?color=green)](https://github.com/SuperElastix/elastix_napari/raw/main/LICENSE)\n[![PyPI](https://img.shields.io/pypi/v/elastix_napari.svg?color=green)](https://pypi.org/project/elastix_napari)\n[![Python Version](https://img.shields.io/pypi/pyversions/elastix_napari.svg?color=green)](https://python.org)\n[![tests](https://github.com/SuperElastix/elastix_napari/workflows/tests/badge.svg)](https://github.com/SuperElastix/elastix_napari/actions)\n[![codecov](https://codecov.io/gh/SuperElastix/elastix_napari/branch/main/graph/badge.svg)](https://codecov.io/gh/SuperElastix/elastix_napari)\n\nThe napari plugin for elastix, a toolbox for rigid and nonrigid registration of images.\n\n----------------------------------\n\nThis [napari] plugin was generated with [Cookiecutter] using with [@napari]'s [cookiecutter-napari-plugin] template.\n\n<!--\nDon't miss the full getting started guide to set up your new package:\nhttps://github.com/napari/cookiecutter-napari-plugin#getting-started\n\nand review the napari docs for plugin developers:\nhttps://napari.org/docs/plugins/index.html\n-->\n\n## Installation\n\nYou can install `elastix_napari` via [pip]:\n\n    pip install elastix_napari\n\n## Contributing\n\nContributions are very welcome. Tests can be run with [tox], please ensure\nthe coverage at least stays the same before you submit a pull request.\n\n## License\n\nDistributed under the terms of the [Apache Software License 2.0] license,\n\"elastix_napari\" is free and open source software\n\n## Issues\n\nIf you encounter any problems, please [file an issue] along with a detailed description.\n\n[napari]: https://github.com/napari/napari\n[Cookiecutter]: https://github.com/audreyr/cookiecutter\n[@napari]: https://github.com/napari\n[MIT]: http://opensource.org/licenses/MIT\n[BSD-3]: http://opensource.org/licenses/BSD-3-Clause\n[GNU GPL v3.0]: http://www.gnu.org/licenses/gpl-3.0.txt\n[GNU LGPL v3.0]: http://www.gnu.org/licenses/lgpl-3.0.txt\n[Apache Software License 2.0]: http://www.apache.org/licenses/LICENSE-2.0\n[Mozilla Public License 2.0]: https://www.mozilla.org/media/MPL/2.0/index.txt\n[cookiecutter-napari-plugin]: https://github.com/napari/cookiecutter-napari-plugin\n[file an issue]: https://github.com/SuperElastix/elastix_napari/issues\n[napari]: https://github.com/napari/napari\n[tox]: https://tox.readthedocs.io/en/latest/\n[pip]: https://pypi.org/project/pip/\n[PyPI]: https://pypi.org/\n\n\n\ntext/markdown",
    "author": "Viktor van der Valk: v.o.van_der_valk@lumc.nl",
    "license": "Apache Software License 2.0",
    "python_version": ">=3.6",
    "operating_system": ["Operating System :: OS Independent"],
    "release_date": "2021-03-29T12:41:38.687847Z",
    "version": "0.1.2",
    "first_released": "2021-03-24T08:31:46.514582Z",
    "status": ["Development Status :: 4 - Beta"]
  },
  {
    "name": "napari-cellfinder",
    "summary": "Visualise cellfinder results with napari",
    "description": "# napari-cellfinder\n\n[![License](https://img.shields.io/pypi/l/napari-cellfinder.svg?color=green)](https://github.com/napari/napari-cellfinder/raw/master/LICENSE)\n[![PyPI](https://img.shields.io/pypi/v/napari-cellfinder.svg?color=green)](https://pypi.org/project/napari-cellfinder)\n[![Python Version](https://img.shields.io/pypi/pyversions/napari-cellfinder.svg?color=green)](https://python.org)\n[![tests](https://github.com/adamltyson/napari-cellfinder/workflows/tests/badge.svg)](https://github.com/adamltyson/napari-cellfinder/actions)\n[![codecov](https://codecov.io/gh/adamltyson/napari-cellfinder/branch/master/graph/badge.svg)](https://codecov.io/gh/adamltyson/napari-cellfinder)\n\nVisualise cellfinder results with napari\n\n\n----------------------------------\n\n\n## Installation\n\nYou can install `napari-cellfinder` via [pip]:\n\n    pip install napari-cellfinder\n\n## Usage\n* Open napari (however you normally do it, but typically just type `napari` into your terminal)\n* Load your raw data (drag and drop the data directories into napari, one at a time)\n* Drag and drop your cellfinder output directory into napari.\n\nThe plugin will then load your detected cells (in yellow) and the rejected cell \ncandidates (in blue). If you carried out registration, then these results will be \noverlaid (similarly to the [napari-brainreg] plugin, but transformed to the \ncoordinate space of your raw data).\n\n![load_data](https://raw.githubusercontent.com/brainglobe/napari-cellfinder/master/resources/load_data.gif)\n**Loading raw data**\n\n![load_data](https://raw.githubusercontent.com/brainglobe/napari-cellfinder/master/resources/load_results.gif)\n**Loading cellfinder results**\n\n## Contributing\n\nContributions are very welcome. Tests can be run with [tox], please ensure\nthe coverage at least stays the same before you submit a pull request.\n\n## License\n\nDistributed under the terms of the [MIT] license,\n\"napari-cellfinder\" is free and open source software\n\n## Issues\n\nIf you encounter any problems, please [file an issue] along with a detailed description.\n\n[napari-brainreg]: https://github.com/brainglobe/napari-brainreg\n[napari]: https://github.com/napari/napari\n[Cookiecutter]: https://github.com/audreyr/cookiecutter\n[@napari]: https://github.com/napari\n[MIT]: http://opensource.org/licenses/MIT\n[BSD-3]: http://opensource.org/licenses/BSD-3-Clause\n[GNU GPL v3.0]: http://www.gnu.org/licenses/gpl-3.0.txt\n[GNU LGPL v3.0]: http://www.gnu.org/licenses/lgpl-3.0.txt\n[Apache Software License 2.0]: http://www.apache.org/licenses/LICENSE-2.0\n[Mozilla Public License 2.0]: https://www.mozilla.org/media/MPL/2.0/index.txt\n[cookiecutter-napari-plugin]: https://github.com/napari/cookiecutter-napari-plugin\n[file an issue]: https://github.com/adamltyson/napari-cellfinder/issues\n[napari]: https://github.com/napari/napari\n[tox]: https://tox.readthedocs.io/en/latest/\n[pip]: https://pypi.org/project/pip/\n[PyPI]: https://pypi.org/\n\n\ntext/markdown",
    "author": "Adam Tyson: adam.tyson@ucl.ac.uk",
    "license": "MIT",
    "python_version": ">=3.6",
    "operating_system": ["Operating System :: OS Independent"],
    "release_date": "2021-01-14T15:41:12.438954Z",
    "version": "0.2.1",
    "first_released": "2020-08-14T09:07:02.660802Z",
    "status": ["Development Status :: 4 - Beta"]
  },
  {
    "name": "nd2-dask",
    "summary": "Plugin to load nd2 data into napari",
    "description": "# nd2-dask\n\n[![License](https://img.shields.io/pypi/l/nd2-dask.svg?color=green)](https://github.com/napari/nd2-dask/raw/master/LICENSE)\n[![PyPI](https://img.shields.io/pypi/v/nd2-dask.svg?color=green)](https://pypi.org/project/nd2-dask)\n[![Python Version](https://img.shields.io/pypi/pyversions/nd2-dask.svg?color=green)](https://python.org)\n[![tests](https://github.com/DragaDoncila/nd2-dask/workflows/tests/badge.svg)](https://github.com/DragaDoncila/nd2-dask/actions)\n[![codecov](https://codecov.io/gh/DragaDoncila/nd2-dask/branch/master/graph/badge.svg)](https://codecov.io/gh/DragaDoncila/nd2-dask)\n\nPlugin to load nd2 data into napari\n\n----------------------------------\n\nThis [napari] plugin was generated with [Cookiecutter] using with [@napari]'s [cookiecutter-napari-plugin] template.\n\n<!--\nDon't miss the full getting started guide to set up your new package:\nhttps://github.com/napari/cookiecutter-napari-plugin#getting-started\n\nand review the napari docs for plugin developers:\nhttps://napari.org/docs/plugins/index.html\n-->\n\n## Installation\n\nYou can install `nd2-dask` via [pip]:\n\n    pip install nd2-dask\n\n## Contributing\n\nContributions are very welcome. Tests can be run with [tox], please ensure\nthe coverage at least stays the same before you submit a pull request.\n\n## License\n\nDistributed under the terms of the [BSD-3] license,\n\"nd2-dask\" is free and open source software\n\n## Issues\n\nIf you encounter any problems, please [file an issue] along with a detailed description.\n\n[napari]: https://github.com/napari/napari\n[Cookiecutter]: https://github.com/audreyr/cookiecutter\n[@napari]: https://github.com/napari\n[MIT]: http://opensource.org/licenses/MIT\n[BSD-3]: http://opensource.org/licenses/BSD-3-Clause\n[GNU GPL v3.0]: http://www.gnu.org/licenses/gpl-3.0.txt\n[GNU LGPL v3.0]: http://www.gnu.org/licenses/lgpl-3.0.txt\n[Apache Software License 2.0]: http://www.apache.org/licenses/LICENSE-2.0\n[Mozilla Public License 2.0]: https://www.mozilla.org/media/MPL/2.0/index.txt\n[cookiecutter-napari-plugin]: https://github.com/napari/cookiecutter-napari-plugin\n[file an issue]: https://github.com/DragaDoncila/nd2-dask/issues\n[napari]: https://github.com/napari/napari\n[tox]: https://tox.readthedocs.io/en/latest/\n[pip]: https://pypi.org/project/pip/\n[PyPI]: https://pypi.org/\n\n\ntext/markdown",
    "author": "Draga Doncila Pop: ddon0001@student.monash.edu",
    "license": "BSD-3",
    "python_version": ">=3.6",
    "operating_system": ["Operating System :: OS Independent"],
    "release_date": "2021-02-04T05:18:13.029326Z",
    "version": "0.0.5",
    "first_released": "2020-11-08T01:29:33.641028Z",
    "status": ["Development Status :: 4 - Beta"]
  },
  {
    "name": "ome-zarr",
    "summary": "Implementation of images in Zarr files.",
    "description": "===========\nome-zarr-py\n===========\n\nExperimental support for multi-resolution images stored in Zarr filesets, according to the `OME zarr spec`_.\n\n\nFeatures\n--------\n\n- Use as a image reader plugin for `napari`_. The `napari`_ plugin was generated with `Cookiecutter`_ along with `@napari`_'s `cookiecutter-napari-plugin`_ template.\n- Simple command-line to read and download conforming Zarr filesets.\n- Helper methods for parsing related metadata.\n\n\nInstallation\n------------\n\nInstall the latest release of `ome-zarr`_ from PyPI::\n\n    pip install ome-zarr\n\n\nInstall developer mode to run from your current branch::\n\n    git clone git@github.com:ome/ome-zarr-py.git\n    cd ome-zarr-py\n    pip install -e .\n\n\nUsage\n-----\n\nOpen Zarr filesets containing images with associated OME metadata.\nThe examples below use the image at http://idr.openmicroscopy.org/webclient/?show=image-6001240.\n\nAll examples can be made more or less verbose by passing `-v` or `-q` one or more times::\n\n    # ome_zarr -vvv ...\n\n\ninfo\n====\n\nUse the `ome_zarr` command to interrogate Zarr datasets::\n\n    # Remote data\n    $ ome_zarr info https://s3.embassy.ebi.ac.uk/idr/zarr/v0.1/6001240.zarr/\n\n    # Local data (after downloading as below)\n    $ ome_zarr info 6001240.zarr/\n\ndownload\n========\n\nTo download all the resolutions and metadata for an image::\n\n    # creates local 6001240.zarr/\n    $ ome_zarr download https://s3.embassy.ebi.ac.uk/idr/zarr/v0.1/6001240.zarr/\n\n    # Specify output directory\n    $ ome_zarr download https://s3.embassy.ebi.ac.uk/idr/zarr/v0.1/6001240.zarr/ --output image_dir\n\nnapari plugin\n=============\n\nNapari will use `ome-zarr` to open images that the plugin recognises as ome-zarr.\nThe image metadata from OMERO will be used to set channel names and rendering settings\nin napari::\n\n    $ napari 'https://s3.embassy.ebi.ac.uk/idr/zarr/v0.1/6001240.zarr/'\n\n    # Also works with local files\n    $ napari 6001240.zarr\n\nOR in python::\n\n    import napari\n    with napari.gui_qt():\n        viewer = napari.Viewer()\n        viewer.open('https://s3.embassy.ebi.ac.uk/idr/zarr/v0.1/6001240.zarr/')\n\nIf single zarray is passed to the plugin, it will be opened without the use of\nthe metadata::\n\n    $ napari '/tmp/6001240.zarr/0'\n\ncsv to labels\n=============\n\nThe `csv_to_labels` command uses a CSV file to add key:value properties to labels\nunder an OME-Zarr Image or Plate.\n\nThe OME-Zarr labels metadata must already contain a `properties`\nlist of `{key:value}` objects, each with a unique key:ID. This key is `omero:shapeId`\nin the example below.\n\nThis ID can be used to identify a single row of the CSV table by specifying the name of\na column with unique values, e.g. `shape_id` below.\nThis row is used to add additional column_name:value data to the label properties.\n\nYou also need to specify which columns from the CSV to use, e.g. `\"area,X,Y,Width,Height\"`.\nYou can also specify the column types (as in https://github.com/ome/omero-metadata/)\nto specify the data-type for each column (string by default).\n\n - `d`: `DoubleColumn`, for floating point numbers\n - `l`: `LongColumn`, for integer numbers\n - `s`: `StringColumn`, for text\n - `b`: `BoolColumn`, for true/false\n\nUse e.g. `#d` as a suffix in the column name to denote a `float` column, no spaces etc:\n```\n\"area#d,label_text#s,Width#l,Height#l\"\n```\n\nFor example, to take values from columns named `area`, `label_text`, `Width` and `Height`\nwithin a CSV file named `labels_data.csv` with an ID column named `shape_id` and add these\nvalues to label properties with an ID key of `omero:shapeId` in an Image or Plate named `123.zarr`::\n\n    ome_zarr csv_to_labels labels_data.csv shape_id \"area#d,label_text#s,Width#l,Height#l\" 123.zarr omero:shapeId```\n\n\nRelease process\n---------------\n\nThis repository uses `bump2version <https://pypi.org/project/bump2version/>`_ to manage version numbers.\nTo tag a release run::\n\n    $ bumpversion release\n\nThis will remove the ``.dev0`` suffix from the current version, commit, and tag the release.\n\nTo switch back to a development version run::\n\n    $ bumpversion --no-tag [major|minor|patch]\n\nspecifying ``major``, ``minor`` or ``patch`` depending on whether the development branch will be a `major, minor or patch release <https://semver.org/>`_. This will also add the ``.dev0`` suffix.\n\nRemember to ``git push`` all commits and tags.\n\n\nLicense\n-------\n\nDistributed under the terms of the `BSD`_ license,\n\"ome-zarr-py\" is free and open source software\n\n.. _`OME zarr spec`: https://github.com/ome/omero-ms-zarr/blob/master/spec.md\n.. _`Cookiecutter`: https://github.com/audreyr/cookiecutter\n.. _`@napari`: https://github.com/napari\n.. _`BSD`: https://opensource.org/licenses/BSD-2-Clause\n.. _`Apache Software License 2.0`: http://www.apache.org/licenses/LICENSE-2.0\n.. _`Mozilla Public License 2.0`: https://www.mozilla.org/media/MPL/2.0/index.txt\n.. _`cookiecutter-napari-plugin`: https://github.com/napari/cookiecutter-napari-plugin\n.. _`napari`: https://github.com/napari/napari\n.. _`ome-zarr`: https://pypi.org/project/ome-zarr/\n\n\n\n",
    "author": "The Open Microscopy Team: ",
    "license": "",
    "python_version": ">=3.6",
    "operating_system": ["Operating System :: OS Independent"],
    "release_date": "2020-12-07T13:13:01.922962Z",
    "version": "0.0.17",
    "first_released": "2020-05-06T15:58:47.352058Z",
    "status": ["Development Status :: 4 - Beta"]
  },
  {
    "name": "napari_video",
    "summary": "napari plugin for reading videos.",
    "description": "# napari-video\nNapari plugin for working with videos.\n\nRelies on [pyvideoreader](https://pypi.org/project/pyvideoreader/) as a backend which itself uses [opencv](https://opencv.org) for reading videos.\n\n## Installation\n```shell\npip install napari[all] napari_video\n```\n\n## Usage\nFrom a terminal:\n```shell\nnapari video.avi\n```\n\nOr from within python:\n```shell\nimport napari\nfrom napari_video.napari_video import VideoReaderNP\n\npath='video.mp4'\nvr = VideoReaderNP(path)\nwith napari.gui_qt():\n    viewer = napari.view_image(vr, name=path)\n```\n\n## Internals\n`napari_video.napari_video.VideoReaderNP` exposes a video with a numpy-like interface, using opencv as a backend.\n\nFor instance, open a video:\n```python\nvr = VideoReaderNP('video.avi')\nprint(vr)\n```\n```\nvideo.avi with 60932 frames of size (920, 912, 3) at 100.00 fps\n```\nThen\n\n- `vr[100]` will return the 100th frame as a numpy array with shape `(902, 912, 3)`.\n- `vr[100:200:10]` will return 10 frames evenly spaced between frame number 100 and 200 (shape `(10, 902, 912, 3)`).\n- Note that by default, single-frame and slice indexing return 3D and 4D arrays, respectively. To consistently return 4D arrays, open the video with `remove_leading_singleton=True`. `vr[100]` will then return a `(1, 902, 912, 3)` array.\n- We can also request specific ROIs and channels. For instance, `vr[100:200:10,100:400,800:850,1]` will return an array with shape `(10, 300, 50, 1)`.\n\n\ntext/markdown",
    "author": "Jan Clemens: clemensjan@googlemail.com",
    "license": "",
    "python_version": ">=3.6",
    "operating_system": [],
    "release_date": "2021-03-16T11:36:22.298000Z",
    "version": "0.2.6",
    "first_released": "2021-02-27T15:40:14.736684Z",
    "status": []
  },
  {
    "name": "napari-mri",
    "summary": "A simple plugin to use with napari for 3D-viewing of                  Magnetic Resonance Imaging file formats",
    "description": "# napari-mri\n\n[![License](https://img.shields.io/pypi/l/napari-mri.svg?color=green)](https://github.com/sahas111/napari-mri/raw/master/LICENSE)\n[![PyPI](https://img.shields.io/pypi/v/napari-mri.svg?color=green)](https://pypi.org/project/napari-mri)\n[![Python Version](https://img.shields.io/pypi/pyversions/napari-mri.svg?color=green)](https://python.org)\n[![tests](https://github.com/sahas111/napari-mri/workflows/tests/badge.svg)](https://github.com/sahas111/napari-mri/actions)\n[![codecov](https://codecov.io/gh/sahas111/napari-mri/branch/master/graph/badge.svg)](https://codecov.io/gh/sahas111/napari-mri)\n\nA simple plugin to use with napari for 3D-viewing of Magnetic Resonance Imaging file formats\n\n----------------------------------\n\nThis [napari] plugin was generated with [Cookiecutter] using with [@napari]'s [cookiecutter-napari-plugin] template.\n\n<!--\nDon't miss the full getting started guide to set up your new package:\nhttps://github.com/napari/cookiecutter-napari-plugin#getting-started\n\nand review the napari docs for plugin developers:\nhttps://napari.org/docs/plugins/index.html\n-->\n\n## Installation\n\nYou can install `napari-mri` via [pip]:\n\n    pip install napari-mri\n\n## Contributing\n\nContributions are very welcome. Tests can be run with [tox], please ensure\nthe coverage at least stays the same before you submit a pull request.\n\n## License\n\nDistributed under the terms of the [BSD-3] license,\n\"napari-mri\" is free and open source software\n\n## Issues\n\nIf you encounter any problems, please [file an issue] along with a detailed description.\n\n[napari]: https://github.com/napari/napari\n[Cookiecutter]: https://github.com/audreyr/cookiecutter\n[@napari]: https://github.com/napari\n[MIT]: http://opensource.org/licenses/MIT\n[BSD-3]: http://opensource.org/licenses/BSD-3-Clause\n[GNU GPL v3.0]: http://www.gnu.org/licenses/gpl-3.0.txt\n[GNU LGPL v3.0]: http://www.gnu.org/licenses/lgpl-3.0.txt\n[Apache Software License 2.0]: http://www.apache.org/licenses/LICENSE-2.0\n[Mozilla Public License 2.0]: https://www.mozilla.org/media/MPL/2.0/index.txt\n[cookiecutter-napari-plugin]: https://github.com/napari/cookiecutter-napari-plugin\n[file an issue]: https://github.com/sahas111/napari-mri/issues\n[napari]: https://github.com/napari/napari\n[tox]: https://tox.readthedocs.io/en/latest/\n[pip]: https://pypi.org/project/pip/\n[PyPI]: https://pypi.org/\n\n\n\ntext/markdown",
    "author": "SUSMITA SAHA: susmi06@yahoo.com",
    "license": "",
    "python_version": ">=3.7",
    "operating_system": ["Operating System :: OS Independent"],
    "release_date": "2021-03-21T06:12:30.232144Z",
    "version": "0.1.0",
    "first_released": "2021-03-21T06:12:30.232144Z",
    "status": ["Development Status :: 4 - Beta"]
  },
  {
    "name": "cellfinder-napari",
    "summary": "Efficient cell detection in large images",
    "description": "# cellfinder-napari\n\n[![License](https://img.shields.io/pypi/l/cellfinder-napari.svg?color=green)](https://github.com/napari/cellfinder-napari/raw/master/LICENSE)\n[![PyPI](https://img.shields.io/pypi/v/cellfinder-napari.svg?color=green)](https://pypi.org/project/cellfinder-napari)\n[![Python Version](https://img.shields.io/pypi/pyversions/cellfinder-napari.svg?color=green)](https://python.org)\n[![tests](https://github.com/adamltyson/cellfinder-napari/workflows/tests/badge.svg)](https://github.com/adamltyson/cellfinder-napari/actions)\n[![codecov](https://codecov.io/gh/adamltyson/cellfinder-napari/branch/master/graph/badge.svg)](https://codecov.io/gh/adamltyson/cellfinder-napari)\n\nEfficient cell detection in large images\n\n----------------------------------\n\nThis [napari] plugin was generated with [Cookiecutter] using with [@napari]'s [cookiecutter-napari-plugin] template.\n\n<!--\nDon't miss the full getting started guide to set up your new package:\nhttps://github.com/napari/cookiecutter-napari-plugin#getting-started\n\nand review the napari docs for plugin developers:\nhttps://napari.org/docs/plugins/index.html\n-->\n\n## Installation\n\nYou can install `cellfinder-napari` via [pip]:\n\n    pip install cellfinder-napari\n\n## Contributing\n\nContributions are very welcome. Tests can be run with [tox], please ensure\nthe coverage at least stays the same before you submit a pull request.\n\n## License\n\nDistributed under the terms of the [BSD-3] license,\n\"cellfinder-napari\" is free and open source software\n\n## Issues\n\nIf you encounter any problems, please [file an issue] along with a detailed description.\n\n[napari]: https://github.com/napari/napari\n[Cookiecutter]: https://github.com/audreyr/cookiecutter\n[@napari]: https://github.com/napari\n[MIT]: http://opensource.org/licenses/MIT\n[BSD-3]: http://opensource.org/licenses/BSD-3-Clause\n[GNU GPL v3.0]: http://www.gnu.org/licenses/gpl-3.0.txt\n[GNU LGPL v3.0]: http://www.gnu.org/licenses/lgpl-3.0.txt\n[Apache Software License 2.0]: http://www.apache.org/licenses/LICENSE-2.0\n[Mozilla Public License 2.0]: https://www.mozilla.org/media/MPL/2.0/index.txt\n[cookiecutter-napari-plugin]: https://github.com/napari/cookiecutter-napari-plugin\n[file an issue]: https://github.com/adamltyson/cellfinder-napari/issues\n[napari]: https://github.com/napari/napari\n[tox]: https://tox.readthedocs.io/en/latest/\n[pip]: https://pypi.org/project/pip/\n[PyPI]: https://pypi.org/\n\n\n\ntext/markdown",
    "author": "Adam Tyson: adam.tyson@ucl.ac.uk",
    "license": "BSD-3",
    "python_version": ">=3.6",
    "operating_system": ["Operating System :: OS Independent"],
    "release_date": "2021-01-26T14:04:22.428453Z",
    "version": "0.0.2",
    "first_released": "2021-01-25T16:40:18.651958Z",
    "status": ["Development Status :: 4 - Beta"]
  },
  {
    "name": "napari-em-reader",
    "summary": "A napari plugin to read .em files",
    "description": "# napari-em-reader\n\n[![License](https://img.shields.io/pypi/l/napari-em-reader.svg?color=green)](https://github.com/brisvag/napari-em-reader/raw/master/LICENSE)\n[![PyPI](https://img.shields.io/pypi/v/napari-em-reader.svg?color=green)](https://pypi.org/project/napari-em-reader)\n[![Python Version](https://img.shields.io/pypi/pyversions/napari-em-reader.svg?color=green)](https://python.org)\n[![tests](https://github.com/brisvag/napari-em-reader/workflows/tests/badge.svg)](https://github.com/brisvag/napari-em-reader/actions)\n[![codecov](https://codecov.io/gh/brisvag/napari-em-reader/branch/master/graph/badge.svg)](https://codecov.io/gh/brisvag/napari-em-reader)\n\nA napari plugin to read .em files\n\n----------------------------------\n\nThis [napari] plugin was generated with [Cookiecutter] using with [@napari]'s [cookiecutter-napari-plugin] template.\n\n<!--\nDon't miss the full getting started guide to set up your new package:\nhttps://github.com/napari/cookiecutter-napari-plugin#getting-started\n\nand review the napari docs for plugin developers:\nhttps://napari.org/docs/plugins/index.html\n-->\n\n## Installation\n\nYou can install `napari-em-reader` via [pip]:\n\n    pip install napari-em-reader\n\n## Contributing\n\nContributions are very welcome. Tests can be run with [tox], please ensure\nthe coverage at least stays the same before you submit a pull request.\n\n## License\n\nDistributed under the terms of the [BSD-3] license,\n\"napari-em-reader\" is free and open source software\n\n## Issues\n\nIf you encounter any problems, please [file an issue] along with a detailed description.\n\n[napari]: https://github.com/napari/napari\n[Cookiecutter]: https://github.com/audreyr/cookiecutter\n[@napari]: https://github.com/napari\n[MIT]: http://opensource.org/licenses/MIT\n[BSD-3]: http://opensource.org/licenses/BSD-3-Clause\n[GNU GPL v3.0]: http://www.gnu.org/licenses/gpl-3.0.txt\n[GNU LGPL v3.0]: http://www.gnu.org/licenses/lgpl-3.0.txt\n[Apache Software License 2.0]: http://www.apache.org/licenses/LICENSE-2.0\n[Mozilla Public License 2.0]: https://www.mozilla.org/media/MPL/2.0/index.txt\n[cookiecutter-napari-plugin]: https://github.com/napari/cookiecutter-napari-plugin\n[file an issue]: https://github.com/brisvag/napari-em-reader/issues\n[napari]: https://github.com/napari/napari\n[tox]: https://tox.readthedocs.io/en/latest/\n[pip]: https://pypi.org/project/pip/\n[PyPI]: https://pypi.org/\n\n\n\ntext/markdown",
    "author": "Lorenzo Gaifas: brisvag@gmail.com",
    "license": "BSD-3",
    "python_version": ">=3.6",
    "operating_system": ["Operating System :: OS Independent"],
    "release_date": "2021-02-23T14:51:15.118105Z",
    "version": "0.1.0",
    "first_released": "2021-02-23T14:51:15.118105Z",
    "status": ["Development Status :: 4 - Beta"]
  },
  {
    "name": "napari-nikon-nd2",
    "summary": "Opens Nikon ND2 files into napari.",
    "description": "# napari-nikon-nd2\n\n[![License](https://img.shields.io/pypi/l/napari-nikon-nd2.svg?color=green)](https://github.com/cwood1967/napari-nikon-nd2/blob/main/LICENSE)\n[![PyPI](https://img.shields.io/pypi/v/napari-nikon-nd2.svg?color=green)](https://pypi.org/project/napari-nikon-nd2)\n[![Python Version](https://img.shields.io/pypi/pyversions/napari-nikon-nd2.svg?color=green)](https://python.org)\n[![tests](https://github.com/cwood1967/napari-nikon-nd2/workflows/tests/badge.svg)](https://github.com/cwood1967/napari-nikon-nd2/actions)\n[![codecov](https://codecov.io/gh/cwood1967/napari-nikon-nd2/branch/main/graph/badge.svg)](https://codecov.io/gh/cwood1967/napari-nikon-nd2)\n\nOpens Nikon ND2 files into napari. This plugin uses the [nd2reader] and [pims] python packages. \n\n----------------------------------\n\nThis [napari] plugin was generated with [Cookiecutter] using with [@napari]'s [cookiecutter-napari-plugin] template.\n\n<!--\nDon't miss the full getting started guide to set up your new package:\nhttps://github.com/napari/cookiecutter-napari-plugin#getting-started\n\nand review the napari docs for plugin developers:\nhttps://napari.org/docs/plugins/index.html\n-->\n\n## Installation\n\nYou can install `napari-nikon-nd2` via [pip]:\n\n    pip install napari-nikon-nd2\n\n## Contributing\n\nContributions are very welcome. Tests can be run with [tox], please ensure\nthe coverage at least stays the same before you submit a pull request.\n\n## License\n\nDistributed under the terms of the [Apache Software License 2.0] license,\n\"napari-nikon-nd2\" is free and open source software\n\n## Issues\n\nIf you encounter any problems, please [file an issue] along with a detailed description.\n\n## Credits\n\nThis [napari] plugin was created using [Napari Delta Vision Reader] and\nthe [Allen Institute IO] plugin as examples.\n\n\n[napari]: https://github.com/napari/napari\n[Cookiecutter]: https://github.com/audreyr/cookiecutter\n[@napari]: https://github.com/napari\n[MIT]: http://opensource.org/licenses/MIT\n[BSD-3]: http://opensource.org/licenses/BSD-3-Clause\n[GNU GPL v3.0]: http://www.gnu.org/licenses/gpl-3.0.txt\n[GNU LGPL v3.0]: http://www.gnu.org/licenses/lgpl-3.0.txt\n[Apache Software License 2.0]: http://www.apache.org/licenses/LICENSE-2.0\n[Mozilla Public License 2.0]: https://www.mozilla.org/media/MPL/2.0/index.txt\n[cookiecutter-napari-plugin]: https://github.com/napari/cookiecutter-napari-plugin\n[file an issue]: https://github.com/cwood1967/napari-nikon-nd2/issues\n[napari]: https://github.com/napari/napari\n[tox]: https://tox.readthedocs.io/en/latest/\n[pip]: https://pypi.org/project/pip/\n[PyPI]: https://pypi.org/\n[nd2reader]: https://github.com/rbnvrw/nd2reader\n[pims]: https://github.com/soft-matter/pims\n[Allen Institute IO]: https://github.com/AllenCellModeling/napari-aicsimageio\n[Napari Delta Vision Reader]: https://github.com/tlambert03/napari-dv\n\n\ntext/markdown",
    "author": "Chris Wood: cwood1967@gmail.com",
    "license": "Apache Software License 2.0",
    "python_version": ">=3.6",
    "operating_system": ["Operating System :: OS Independent"],
    "release_date": "2021-02-03T21:55:34.674256Z",
    "version": "0.1.3",
    "first_released": "2021-02-03T21:21:34.976957Z",
    "status": ["Development Status :: 4 - Beta"]
  },
  {
    "name": "brainglobe-napari-io",
    "summary": "Read and write files from the BrainGlobe neuroanatomy suite",
    "description": "# napari-cellfinder\n\n[![License](https://img.shields.io/pypi/l/brainglobe-napari-io.svg?color=green)](https://github.com/napari/brainglobe-napari-io/raw/master/LICENSE)\n[![PyPI](https://img.shields.io/pypi/v/brainglobe-napari-io.svg?color=green)](https://pypi.org/project/brainglobe-napari-io)\n[![Python Version](https://img.shields.io/pypi/pyversions/brainglobe-napari-io.svg?color=green)](https://python.org)\n[![tests](https://github.com/brainglobe/brainglobe-napari-io/workflows/tests/badge.svg)](https://github.com/brainglobe/brainglobe-napari-io/actions)\n[![codecov](https://codecov.io/gh/brainglobe/brainglobe-napari-io/branch/master/graph/badge.svg)](https://codecov.io/gh/brainglobe/brainglobe-napari-io)\n\nVisualise cellfinder and brainreg results with napari\n\n\n----------------------------------\n\n\n## Installation\nThis package is likely already installed \n(e.g. with cellfinder, brainreg or another napari plugin), but if you want to \ninstall it again, either use the napari plugin install GUI or you can \ninstall `brainglobe-napari-io` via [pip]:\n\n    pip install brainglobe-napari-io\n\n## Usage\n* Open napari (however you normally do it, but typically just type `napari` into your terminal, or click on your desktop icon)\n\n### brainreg\n#### Sample space\nOpen napari and drag your [brainreg](https://github.com/brainglobe/brainreg) output directory (the one with the log file) onto the napari window.\n\nVarious images should then open, including:\n* `Registered image` - the image used for registration, downsampled to atlas resolution\n* `atlas_name` - e.g. `allen_mouse_25um` the atlas labels, warped to your sample brain\n* `Boundaries` - the boundaries of the atlas regions\n\nIf you downsampled additional channels, these will also be loaded.\n\nMost of these images will not be visible by default. Click the little eye icon to toggle visibility.\n\n_N.B. If you use a high resolution atlas (such as `allen_mouse_10um`), then the files can take a little while to load._\n\n![sample_space](https://raw.githubusercontent.com/brainglobe/brainglobe-napari-io/master/resources/sample_space.gif)\n\n\n#### Atlas space\n`napari-brainreg` also comes with an additional plugin, for visualising your data \nin atlas space. \n\nThis is typically only used in other software, but you can enable it yourself:\n* Open napari\n* Navigate to `Plugins` -> `Plugin Call Order`\n* In the `Plugin Sorter` window, select `napari_get_reader` from the `select hook...` dropdown box\n* Drag `brainreg_read_dir_standard_space` (the atlas space viewer plugin) above `brainreg_read_dir` (the normal plugin) to ensure that the atlas space plugin is used preferentially.\n\n![atlas_space](https://raw.githubusercontent.com/brainglobe/brainglobe-napari-io/master/resources/atlas_space.gif)\n\n\n### cellfinder\n#### Load cellfinder XML file\n* Load your raw data (drag and drop the data directories into napari, one at a time)\n* Drag and drop your cellfinder XML file (e.g. `cell_classification.xml`) into napari.\n\n#### Load cellfinder directory\n* Load your raw data (drag and drop the data directories into napari, one at a time)\n* Drag and drop your cellfinder output directory into napari.\n\nThe plugin will then load your detected cells (in yellow) and the rejected cell \ncandidates (in blue). If you carried out registration, then these results will be \noverlaid (similarly to the loading brainreg data, but transformed to the \ncoordinate space of your raw data).\n\n![load_data](https://raw.githubusercontent.com/brainglobe/brainglobe-napari-io/master/resources/load_data.gif)\n**Loading raw data**\n\n![load_data](https://raw.githubusercontent.com/brainglobe/brainglobe-napari-io/master/resources/load_results.gif)\n**Loading cellfinder results**\n\n\n\n## Contributing\n\nContributions are very welcome. Tests can be run with [tox], please ensure\nthe coverage at least stays the same before you submit a pull request.\n\n## License\n\nDistributed under the terms of the [MIT] license,\n\"brainglobe-napari-io\" is free and open source software\n\n## Issues\n\nIf you encounter any problems, please [file an issue] along with a detailed description.\n\n[napari]: https://github.com/napari/napari\n[Cookiecutter]: https://github.com/audreyr/cookiecutter\n[@napari]: https://github.com/napari\n[MIT]: http://opensource.org/licenses/MIT\n[BSD-3]: http://opensource.org/licenses/BSD-3-Clause\n[GNU GPL v3.0]: http://www.gnu.org/licenses/gpl-3.0.txt\n[GNU LGPL v3.0]: http://www.gnu.org/licenses/lgpl-3.0.txt\n[Apache Software License 2.0]: http://www.apache.org/licenses/LICENSE-2.0\n[Mozilla Public License 2.0]: https://www.mozilla.org/media/MPL/2.0/index.txt\n[cookiecutter-napari-plugin]: https://github.com/napari/cookiecutter-napari-plugin\n[file an issue]: https://github.com/brainglobe/brainglobe-napari-io/issues\n[napari]: https://github.com/napari/napari\n[tox]: https://tox.readthedocs.io/en/latest/\n[pip]: https://pypi.org/project/pip/\n[PyPI]: https://pypi.org/\n\n\ntext/markdown",
    "author": "Adam Tyson: adam.tyson@ucl.ac.uk",
    "license": "GPL-3.0",
    "python_version": ">=3.6",
    "operating_system": ["Operating System :: OS Independent"],
    "release_date": "2021-03-12T17:35:22.014796Z",
    "version": "0.0.2",
    "first_released": "2021-03-12T12:52:23.068881Z",
    "status": ["Development Status :: 4 - Beta"]
  },
  {
    "name": "napari-btrack-reader",
    "summary": "A plugin to load btrack files",
    "description": "# napari-btrack-reader\n\n[![License](https://img.shields.io/pypi/l/napari-btrack-reader.svg?color=green)](https://github.com/napari/napari-btrack-reader/raw/master/LICENSE)\n[![PyPI](https://img.shields.io/pypi/v/napari-btrack-reader.svg?color=green)](https://pypi.org/project/napari-btrack-reader)\n[![Python Version](https://img.shields.io/pypi/pyversions/napari-btrack-reader.svg?color=green)](https://python.org)\n[![tests](https://github.com/quantumjot/napari-btrack-reader/workflows/tests/badge.svg)](https://github.com/quantumjot/napari-btrack-reader/actions)\n[![codecov](https://codecov.io/gh/quantumjot/napari-btrack-reader/branch/master/graph/badge.svg)](https://codecov.io/gh/quantumjot/napari-btrack-reader)\n\nA plugin to load btrack files\n\n----------------------------------\n\nThis plugin reads tracking data generated by BayesianTracker (btrack).\n\nThis [napari] plugin was generated with [Cookiecutter] using with [@napari]'s [cookiecutter-napari-plugin] template.\n\n<!--\nDon't miss the full getting started guide to set up your new package:\nhttps://github.com/napari/cookiecutter-napari-plugin#getting-started\n\nand review the napari docs for plugin developers:\nhttps://napari.org/docs/plugins/index.html\n-->\n\n## Installation\n\nYou can install `napari-btrack-reader` via [pip]:\n\n    pip install napari-btrack-reader\n\n## Contributing\n\nContributions are very welcome. Tests can be run with [tox], please ensure\nthe coverage at least stays the same before you submit a pull request.\n\n## License\n\nDistributed under the terms of the [BSD-3] license,\n\"napari-btrack-reader\" is free and open source software\n\n## Issues\n\nIf you encounter any problems, please [file an issue] along with a detailed description.\n\n[napari]: https://github.com/napari/napari\n[Cookiecutter]: https://github.com/audreyr/cookiecutter\n[@napari]: https://github.com/napari\n[MIT]: http://opensource.org/licenses/MIT\n[BSD-3]: http://opensource.org/licenses/BSD-3-Clause\n[GNU GPL v3.0]: http://www.gnu.org/licenses/gpl-3.0.txt\n[GNU LGPL v3.0]: http://www.gnu.org/licenses/lgpl-3.0.txt\n[Apache Software License 2.0]: http://www.apache.org/licenses/LICENSE-2.0\n[Mozilla Public License 2.0]: https://www.mozilla.org/media/MPL/2.0/index.txt\n[cookiecutter-napari-plugin]: https://github.com/napari/cookiecutter-napari-plugin\n[file an issue]: https://github.com/quantumjot/napari-btrack-reader/issues\n[napari]: https://github.com/napari/napari\n[tox]: https://tox.readthedocs.io/en/latest/\n[pip]: https://pypi.org/project/pip/\n[PyPI]: https://pypi.org/\n\n\n\ntext/markdown",
    "author": "Alan R. Lowe: code@arlowe.co.uk",
    "license": "BSD-3",
    "python_version": ">=3.6",
    "operating_system": ["Operating System :: OS Independent"],
    "release_date": "2020-11-05T10:23:48.064223Z",
    "version": "0.1.0",
    "first_released": "2020-11-05T10:23:48.064223Z",
    "status": ["Development Status :: 4 - Beta"]
  },
  {
    "name": "napping",
    "summary": "Control point mapping and coordination transformation using napari",
    "description": "# napping\n\n![PyPI](https://img.shields.io/pypi/v/napping)\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/napping)\n![PyPI - License](https://img.shields.io/pypi/l/napping)\n![GitHub issues](https://img.shields.io/github/issues/BodenmillerGroup/napping)\n![GitHub pull requests](https://img.shields.io/github/issues-pr/BodenmillerGroup/napping)\n\nControl point mapping and coordination transformation using napari\n\n## Requirements\n\nThis package requires Python 3.7 or newer.\n\nPython package dependencies are listed in [requirements.txt](https://github.com/BodenmillerGroup/napping/blob/main/requirements.txt).\n\nUsing virtual environments is strongly recommended.\n\n## Installation\n\nInstall napping and its dependencies with:\n\n    pip install napping\n\n### Environment setup example: mapping IMC and slidescanner images\n\nAs napari is under active development, the use of virtual environments is strongly encouraged. For example, to set up an environment for aligning Imaging Mass Cytometry (IMC, .mcd/.txt) and bright-field/immunofluorescence slidescanner (.czi) images:\n\n    conda create -n napping python\n    conda activate napping\n    pip install napping napari-imc napari-czifile2\n\nAfterwards, napping can be started from inside the environment:\n\n    napping\n\n## Usage\n\nUse `napping` for control point mapping and coordinate transformation\n\n## Authors\n\nCreated and maintained by Jonas Windhager [jonas.windhager@uzh.ch](mailto:jonas.windhager@uzh.ch)\n\n## Contributing\n\n[Contributing](https://github.com/BodenmillerGroup/napping/blob/main/CONTRIBUTING.md)\n\n## Changelog\n\n[Changelog](https://github.com/BodenmillerGroup/napping/blob/main/CHANGELOG.md)\n\n## License\n\n[MIT](https://github.com/BodenmillerGroup/napping/blob/main/LICENSE.md)\n\n\n\ntext/markdown",
    "author": "Jonas Windhager: jonas.windhager@uzh.ch",
    "license": "MIT",
    "python_version": ">=3.7",
    "operating_system": ["Operating System :: OS Independent"],
    "release_date": "2021-03-15T23:01:07.633925Z",
    "version": "0.1.7",
    "first_released": "2021-02-02T20:57:19.679669Z",
    "status": ["Development Status :: 4 - Beta"]
  },
  {
    "name": "napari-brainreg",
    "summary": "Visualise brainreg registration output",
    "description": "# napari-brainreg\n\n[![License](https://img.shields.io/pypi/l/napari-brainreg.svg?color=green)](https://github.com/brainglobe/napari-brainreg/raw/master/LICENSE)\n[![PyPI](https://img.shields.io/pypi/v/napari-brainreg.svg?color=green)](https://pypi.org/project/napari-brainreg)\n[![Python Version](https://img.shields.io/pypi/pyversions/napari-brainreg.svg?color=green)](https://python.org)\n[![tests](https://github.com/brainglobe/napari-brainreg/workflows/tests/badge.svg)](https://github.com/brainglobe/napari-brainreg/actions)\n[![Development Status](https://img.shields.io/pypi/status/napari-brainreg.svg)](https://github.com/brainglobe/napari-brainreg)\n[![codecov](https://codecov.io/gh/brainglobe/napari-brainreg/branch/master/graph/badge.svg)](https://codecov.io/gh/brainglobe/napari-brainreg)\n[![Gitter](https://badges.gitter.im/cellfinder/brainreg.svg)](https://gitter.im/cellfinder/brainreg?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n\nVisualise [brainreg](https://github.com/brainglobe/brainreg) registration output in [napari](https://github.com/napari/napari)\n\nBased on the [napari cookiecutter plugin template](https://github.com/napari/cookiecutter-napari-plugin) and [napari-ndtiffs](https://github.com/tlambert03/napari-ndtiffs) by [@tlambert03](https://github.com/tlambert03)\n\n----------------------------------\n\n## Installation\nAssuming you already have [napari](https://github.com/napari/napari) installed, you can install `napari-brainreg` via pip:\n\n    pip install napari-brainreg\n\n## Usage\n#### Sample space\nOpen napari and drag your [brainreg](https://github.com/brainglobe/brainreg) output directory (the one with the log file) onto the napari window.\n\nVarious images should then open, including:\n* `Registered image` - the image used for registration, downsampled to atlas resolution\n* `atlas_name` - e.g. `allen_mouse_25um` the atlas labels, warped to your sample brain\n* `Boundaries` - the boundaries of the atlas regions\n\nIf you downsampled additional channels, these will also be loaded.\n\nMost of these images will not be visible by default. Click the little eye icon to toggle visibility.\n\n_N.B. If you use a high resolution atlas (such as `allen_mouse_10um`), then the files can take a little while to load._\n\n![sample_space](https://raw.githubusercontent.com/brainglobe/napari-brainreg/master/resources/sample_space.gif)\n\n\n#### Atlas space\n`napari-brainreg` also comes with an additional plugin, for visualising your data \nin atlas space. \n\nThis is typically only used in other software, but you can enable it yourself:\n* Open napari\n* Navigate to `Plugins` -> `Plugin Call Order`\n* In the `Plugin Sorter` window, select `napari_get_reader` from the `select hook...` dropdown box\n* Drag `brainreg_standard` (the atlas space viewer plugin) above `brainreg` (the normal plugin) to ensure that the atlas space plugin is used preferentially.\n\n![atlas_space](https://raw.githubusercontent.com/brainglobe/napari-brainreg/master/resources/atlas_space.gif)\n\n\n\ntext/markdown",
    "author": "Adam Tyson: adam.tyson@ucl.ac.uk",
    "license": "MIT",
    "python_version": ">=3.6",
    "operating_system": ["Operating System :: OS Independent"],
    "release_date": "2020-11-13T13:48:23.695512Z",
    "version": "0.2.3",
    "first_released": "2020-08-12T16:20:36.226724Z",
    "status": ["Development Status :: 4 - Beta"]
  },
  {
    "name": "brainreg-segment",
    "summary": "Manual segmentation of 3D brain structures in a common anatomical space",
    "description": "[![Python Version](https://img.shields.io/pypi/pyversions/brainreg-segment.svg)](https://pypi.org/project/brainreg-segment)\n[![PyPI](https://img.shields.io/pypi/v/brainreg-segment.svg)](https://pypi.org/project/brainreg-segment)\n[![Wheel](https://img.shields.io/pypi/wheel/brainreg-segment.svg)](https://pypi.org/project/brainreg-segment)\n[![Development Status](https://img.shields.io/pypi/status/brainreg-segment.svg)](https://github.com/brainglobe/brainreg-segment)\n[![Tests](https://img.shields.io/github/workflow/status/brainglobe/brainreg-segment/tests)](\n    https://github.com/brainglobe/brainreg-segment/actions)\n[![Coverage Status](https://coveralls.io/repos/github/brainglobe/brainreg-segment/badge.svg?branch=master)](https://coveralls.io/github/brainglobe/brainreg-segment?branch=master)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/python/black)\n[![Gitter](https://badges.gitter.im/brainglobe/brainreg-segment.svg)](https://gitter.im/brainglobe/brainreg-segment?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n\n# brainreg-segment\nSegmentation of 1/2/3D brain structures in a common anatomical space\n\n`brainreg-segment` is a companion to [`brainreg`](https://github.com/brainglobe/brainreg) allowing manual segmentation of regions/objects within the brain (e.g. injection sites, probes etc.) allowing for automated analysis of brain region distribution, and visualisation (e.g. in [brainrender](https://github.com/BrancoLab/brainrender)).\n\n## Installation\n\nbrainreg-segment comes bundled with [`brainreg`](https://github.com/brainglobe/brainreg), so see the [brainreg installation instructions](https://docs.brainglobe.info/brainreg/installation). \n\nbrainreg-segment can be installed on it's own (`pip install brainreg-segment`), but you will need to register your data with brainreg first. \n\n## Usage\n\nSee [user guide](https://docs.brainglobe.info/brainreg-segment/user-guide)\n\n\ntext/markdown",
    "author": "Adam Tyson, Horst Obenhaus: adam.tyson@ucl.ac.uk",
    "license": "",
    "python_version": ">=3.7",
    "operating_system": [
      "Operating System :: Microsoft :: Windows :: Windows 10",
      "Operating System :: POSIX :: Linux"
    ],
    "release_date": "2021-03-09T18:02:56.954237Z",
    "version": "0.2.5",
    "first_released": "2020-08-26T09:04:27.878441Z",
    "status": ["Development Status :: 3 - Alpha"]
  },
  {
    "name": "napari-aicsimageio",
    "summary": "AICSImageIO bindings for napari",
    "description": "# napari-aicsimageio\n\n[![Build Status](https://github.com/AllenCellModeling/napari-aicsimageio/workflows/Build%20Master/badge.svg)](https://github.com/AllenCellModeling/napari-aicsimageio/actions)\n[![Code Coverage](https://codecov.io/gh/AllenCellModeling/napari-aicsimageio/branch/master/graph/badge.svg)](https://codecov.io/gh/AllenCellModeling/napari-aicsimageio)\n\nAICSImageIO bindings for napari\n\n---\n\n## Features\n* Supports reading metadata and imaging data for:\n    * `CZI`\n    * `OME-TIFF`\n    * `TIFF`\n    * Any formats supported by [aicsimageio](https://github.com/AllenCellModeling/aicsimageio)\n    * Any additional format supported by [imageio](https://github.com/imageio/imageio)\n* Two variants of the AICSImageIO bindings:\n    * `aicsimageio`, which reads the image fully into memory\n    * `aicsimageio-delayed`, which delays reading YX planes until requested for large file support\n\n## Installation\n**Stable Release:** `pip install napari-aicsimageio`<br>\n**Development Head:** `pip install git+https://github.com/AllenCellModeling/napari-aicsimageio.git`\n\n## Development\nSee [CONTRIBUTING.md](CONTRIBUTING.md) for information related to developing the code.\n\n***Free software: BSD-3-Clause***\n\n\n\ntext/markdown",
    "author": "Jackson Maxfield Brown: jmaxfieldbrown@gmail.com",
    "license": "BSD-3-Clause",
    "python_version": ">=3.7",
    "operating_system": [],
    "release_date": "2020-12-14T07:30:26.366917Z",
    "version": "0.2.0",
    "first_released": "2020-03-26T20:10:54.889461Z",
    "status": ["Development Status :: 5 - Production/Stable"]
  },
  {
    "name": "napari-demo",
    "summary": "demo plugin",
    "description": "# napari-demo\n\n[![License](https://img.shields.io/pypi/l/napari-demo.svg?color=green)](https://github.com/ziyangczi/napari-demo/raw/master/LICENSE)\n[![PyPI](https://img.shields.io/pypi/v/napari-demo.svg?color=green)](https://pypi.org/project/napari-demo)\n[![Python Version](https://img.shields.io/pypi/pyversions/napari-demo.svg?color=green)](https://python.org)\n[![tests](https://github.com/ziyangczi/napari-demo/workflows/tests/badge.svg)](https://github.com/ziyangczi/napari-demo/actions)\n[![codecov](https://codecov.io/gh/ziyangczi/napari-demo/branch/master/graph/badge.svg)](https://codecov.io/gh/ziyangczi/napari-demo)\n\nThis is a demo plugin implementation of https://github.com/napari/napari/blob/master/examples/magic_image_arithmetic.py\n\n----------------------------------\n\nThis [napari] plugin was generated with [Cookiecutter] using with [@napari]'s [cookiecutter-napari-plugin] template.\n\n<!--\nDon't miss the full getting started guide to set up your new package:\nhttps://github.com/napari/cookiecutter-napari-plugin#getting-started\n\nand review the napari docs for plugin developers:\nhttps://napari.org/docs/plugins/index.html\n-->\n\n## Installation\n\nYou can install `napari-demo` via [pip]:\n\n    pip install napari-demo\n\n## Contributing\n\nContributions are very welcome. Tests can be run with [tox], please ensure\nthe coverage at least stays the same before you submit a pull request.\n\n## License\n\nDistributed under the terms of the [BSD-3] license,\n\"napari-demo\" is free and open source software\n\n## Issues\n\nIf you encounter any problems, please [file an issue] along with a detailed description.\n\n[napari]: https://github.com/napari/napari\n[Cookiecutter]: https://github.com/audreyr/cookiecutter\n[@napari]: https://github.com/napari\n[MIT]: http://opensource.org/licenses/MIT\n[BSD-3]: http://opensource.org/licenses/BSD-3-Clause\n[GNU GPL v3.0]: http://www.gnu.org/licenses/gpl-3.0.txt\n[GNU LGPL v3.0]: http://www.gnu.org/licenses/lgpl-3.0.txt\n[Apache Software License 2.0]: http://www.apache.org/licenses/LICENSE-2.0\n[Mozilla Public License 2.0]: https://www.mozilla.org/media/MPL/2.0/index.txt\n[cookiecutter-napari-plugin]: https://github.com/napari/cookiecutter-napari-plugin\n[file an issue]: https://github.com/ziyangczi/napari-demo/issues\n[napari]: https://github.com/napari/napari\n[tox]: https://tox.readthedocs.io/en/latest/\n[pip]: https://pypi.org/project/pip/\n[PyPI]: https://pypi.org/\n\n\n\ntext/markdown",
    "author": "Ziyang Liu: zliu@chanzuckerberg.com",
    "license": "BSD-3",
    "python_version": ">=3.6",
    "operating_system": ["Operating System :: OS Independent"],
    "release_date": "2021-01-27T19:22:41.381119Z",
    "version": "0.0.1",
    "first_released": "2021-01-27T19:22:41.381119Z",
    "status": ["Development Status :: 4 - Beta"]
  },
  {
    "name": "napari-dzi-zarr",
    "summary": "An experimental plugin for viewing Deep Zoom Images (DZI) with napari and zarr.",
    "description": "# napari-dzi-zarr\n\n[![License](https://img.shields.io/pypi/l/napari-dzi-zarr.svg?color=green)](https://github.com/napari/napari-dzi-zarr/raw/master/LICENSE)\n[![PyPI](https://img.shields.io/pypi/v/napari-dzi-zarr.svg?color=green)](https://pypi.org/project/napari-dzi-zarr)\n[![Python Version](https://img.shields.io/pypi/pyversions/napari-dzi-zarr.svg?color=green)](https://python.org)\n[![tests](https://github.com/manzt/napari-dzi-zarr/workflows/tests/badge.svg)](https://github.com/manzt/napari-dzi-zarr/actions)\n\nAn experimental plugin for viewing Deep Zoom Images (DZI) with napari + zarr + dask.\n\n----------------------------------\n\nThis [napari] plugin was generated with [Cookiecutter] using with [@napari]'s [cookiecutter-napari-plugin] template.\n\n## Description \n\nThe [DZI File Format](https://github.com/openseadragon/openseadragon/wiki/The-DZI-File-Format) \nis a pyramidal tile source specification where individual tiles are RGB/RGBA JPEG/PNG images. \nDZI is a very popular tile source for zoomable web-viewers like \n[OpenSeadragon](https://openseadragon.github.io/), and as a result many tile sources are available over \nHTTP. This plugin wraps a DZI tile source (local or remote) as a multiscale Zarr, where each pyramidal level is a `zarr.Array` of shape `(level_height, level_width, 3/4)`, allowing the same images to be viewed \nin `napari` + `dask`.\n\n## Installation\n\nYou can install `napari-dzi-zarr` via [pip]:\n\n    pip install napari-dzi-zarr\n\n\n## Usage\n\nThis high-resolution scan of Rembrandt's Night Watch is available thanks to [R.G Erdmann](https://twitter.com/erdmann). More examples can be found on [boschproject.org](http://boschproject.org).\n\n    $ napari http://hyper-resolution.org/dzi/Rijksmuseum/SK-C-5/SK-C-5_VIS_20-um_2019-12-21.dzi\n\n![Rembrandt's Night Watch in napari](./night_watch_napari.png)\n\n## Contributing\n\nContributions are very welcome. Tests can be run with [tox].\n\n## License\n\nDistributed under the terms of the [BSD-3] license,\n\"napari-dzi-zarr\" is free and open source software\n\n## Issues\n\nIf you encounter any problems, please [file an issue] along with a detailed description.\n\n[napari]: https://github.com/napari/napari\n[Cookiecutter]: https://github.com/audreyr/cookiecutter\n[@napari]: https://github.com/napari\n[MIT]: http://opensource.org/licenses/MIT\n[BSD-3]: http://opensource.org/licenses/BSD-3-Clause\n[GNU GPL v3.0]: http://www.gnu.org/licenses/gpl-3.0.txt\n[GNU LGPL v3.0]: http://www.gnu.org/licenses/lgpl-3.0.txt\n[Apache Software License 2.0]: http://www.apache.org/licenses/LICENSE-2.0\n[Mozilla Public License 2.0]: https://www.mozilla.org/media/MPL/2.0/index.txt\n[cookiecutter-napari-plugin]: https://github.com/napari/cookiecutter-napari-plugin\n[file an issue]: https://github.com/manzt/napari-dzi-zarr/issues\n[napari]: https://github.com/napari/napari\n[tox]: https://tox.readthedocs.io/en/latest/\n[pip]: https://pypi.org/project/pip/\n[PyPI]: https://pypi.org/\n\n\n\ntext/markdown",
    "author": "Trevor Manz: trevor.j.manz@gmail.com",
    "license": "BSD-3",
    "python_version": ">=3.6",
    "operating_system": ["Operating System :: OS Independent"],
    "release_date": "2021-04-06T14:13:16.654713Z",
    "version": "0.1.2",
    "first_released": "2020-08-20T17:18:30.022784Z",
    "status": ["Development Status :: 4 - Beta"]
  },
  {
    "name": "napari-hdf5-labels-io",
    "summary": "Napari plugin to store set of layers in a .h5 file. Label layer are stored in a sparse representation",
    "description": "# napari-hdf5-labels-io\n\n[![License](https://img.shields.io/pypi/l/napari-hdf5-labels-io.svg?color=green)](https://github.com/yapic/napari-hdf5-labels-io/raw/master/LICENSE)\n[![PyPI](https://img.shields.io/pypi/v/napari-hdf5-labels-io.svg?color=green)](https://pypi.org/project/napari-hdf5-labels-io)\n[![Python Version](https://img.shields.io/pypi/pyversions/napari-hdf5-labels-io.svg?color=green)](https://python.org)\n[![tests](https://github.com/yapic/napari-hdf5-labels-io/workflows/tests/badge.svg)](https://github.com/yapic/napari-hdf5-labels-io/actions)\n[![codecov](https://codecov.io/gh/yapic/napari-hdf5-labels-io/branch/master/graph/badge.svg)](https://codecov.io/gh/yapic/napari-hdf5-labels-io)\n\nNapari plugin to store Napari projects in a .h5 file. Label layer are stored in a sparse representation (COO list).\n\n----------------------------------\n\nThis [napari] plugin was generated with [Cookiecutter] using with [@napari]'s [cookiecutter-napari-plugin] template.\n\n<!--\nDon't miss the full getting started guide to set up your new package:\nhttps://github.com/napari/cookiecutter-napari-plugin#getting-started\n\nand review the napari docs for plugin developers:\nhttps://napari.org/docs/plugins/index.html\n-->\n\n## Description\n\nThis Napari plugin provides a writer and reader to store existing layers in the current Napari window, all the metadata is stored as well in a HDF5 file. All the stored preferences are included when a project file is opened.\n\nLabel layers are stored in a coordinate list sparse representation with the [Sparse module](https://sparse.pydata.org/) to keep the project file size minimum (aiming to implement this in other layers in the future).\n\n## HDF5 file architecture\n\nThe project file is a HDF5 generated with the [h5py module](https://docs.h5py.org). The file groups correspond to the different Napari layer types and the layer metadata is stored as attributes of each layer.\n\nIn the case of the meta dictionary which is nested in the LayerData meta dictionary (Napari IO), new keys are generated in the outer dictionary to use them as h5 dataset attributes. This nested dictionary architecture is reconstructed by the reader to ensure format compatibility.\n\n## Installation\n\nYou can install `napari-hdf5-labels-io` via [pip]:\n\n    pip install napari-hdf5-labels-io\n\n## Contributing\n\nContributions are very welcome. Tests can be run with [tox], please ensure\nthe coverage at least stays the same before you submit a pull request.\n\n## License\n\nDistributed under the terms of the [GNU GPL v3.0] license,\n\"napari-hdf5-labels-io\" is free and open source software.\n\n## Issues\n\nIf you encounter any problems, please [file an issue] along with a detailed description.\n\n[napari]: https://github.com/napari/napari\n[Cookiecutter]: https://github.com/audreyr/cookiecutter\n[@napari]: https://github.com/napari\n[MIT]: http://opensource.org/licenses/MIT\n[BSD-3]: http://opensource.org/licenses/BSD-3-Clause\n[GNU GPL v3.0]: http://www.gnu.org/licenses/gpl-3.0.txt\n[GNU LGPL v3.0]: http://www.gnu.org/licenses/lgpl-3.0.txt\n[Apache Software License 2.0]: http://www.apache.org/licenses/LICENSE-2.0\n[Mozilla Public License 2.0]: https://www.mozilla.org/media/MPL/2.0/index.txt\n[cookiecutter-napari-plugin]: https://github.com/napari/cookiecutter-napari-plugin\n[file an issue]: https://github.com/yapic/napari-hdf5-labels-io/issues\n[napari]: https://github.com/napari/napari\n[tox]: https://tox.readthedocs.io/en/latest/\n[pip]: https://pypi.org/project/pip/\n[PyPI]: https://pypi.org/\n\n\n\ntext/markdown",
    "author": "Duway Nicolas Lesmes Leon: dlesmesleon@hotmail.com",
    "license": "GNU GPL v3.0",
    "python_version": "<3.9",
    "operating_system": ["Operating System :: OS Independent"],
    "release_date": "2021-04-07T12:15:01.683207Z",
    "version": "0.2.dev13",
    "first_released": "2021-03-04T09:44:01.947204Z",
    "status": ["Development Status :: 4 - Beta"]
  },
  {
    "name": "napari-console",
    "summary": "A plugin that adds a console to napari",
    "description": "# napari-console (WIP, under active development)\n\n[![License](https://img.shields.io/pypi/l/napari-console.svg?color=green)](https://github.com/napari/napari-console/raw/master/LICENSE)\n[![PyPI](https://img.shields.io/pypi/v/napari-console.svg?color=green)](https://pypi.org/project/napari-console)\n[![Python Version](https://img.shields.io/pypi/pyversions/napari-console.svg?color=green)](https://python.org)\n[![tests](https://github.com/sofroniewn/napari-console/workflows/tests/badge.svg)](https://github.com/sofroniewn/napari-console/actions)\n[![codecov](https://codecov.io/gh/sofroniewn/napari-console/branch/master/graph/badge.svg)](https://codecov.io/gh/sofroniewn/napari-console)\n\nA plugin that adds a console to napari\n\n----------------------------------\n\nThis [napari] plugin was generated with [Cookiecutter] using with [@napari]'s [cookiecutter-napari-plugin] template.\n\n<!--\nDon't miss the full getting started guide to set up your new package:\nhttps://github.com/napari/cookiecutter-napari-plugin#getting-started\n\nand review the napari docs for plugin developers:\nhttps://napari.org/docs/plugins/index.html\n-->\n\n## Installation\n\nYou can install `napari-console` via [pip]:\n\n    pip install napari-console\n\n## Contributing\n\nContributions are very welcome. Tests can be run with [tox], please ensure\nthe coverage at least stays the same before you submit a pull request.\n\n## License\n\nDistributed under the terms of the [BSD-3] license,\n\"napari-console\" is free and open source software\n\n## Issues\n\nIf you encounter any problems, please [file an issue] along with a detailed description.\n\n[napari]: https://github.com/napari/napari\n[Cookiecutter]: https://github.com/audreyr/cookiecutter\n[@napari]: https://github.com/napari\n[MIT]: http://opensource.org/licenses/MIT\n[BSD-3]: http://opensource.org/licenses/BSD-3-Clause\n[GNU GPL v3.0]: http://www.gnu.org/licenses/gpl-3.0.txt\n[GNU LGPL v3.0]: http://www.gnu.org/licenses/lgpl-3.0.txt\n[Apache Software License 2.0]: http://www.apache.org/licenses/LICENSE-2.0\n[Mozilla Public License 2.0]: https://www.mozilla.org/media/MPL/2.0/index.txt\n[cookiecutter-napari-plugin]: https://github.com/napari/cookiecutter-napari-plugin\n[file an issue]: https://github.com/sofroniewn/napari-console/issues\n[napari]: https://github.com/napari/napari\n[tox]: https://tox.readthedocs.io/en/latest/\n[pip]: https://pypi.org/project/pip/\n[PyPI]: https://pypi.org/\n\n\n\ntext/markdown",
    "author": "Nicholas Sofroniew: sofroniewn@gmail.com",
    "license": "BSD-3",
    "python_version": ">=3.7",
    "operating_system": ["Operating System :: OS Independent"],
    "release_date": "2021-02-14T17:53:30.374963Z",
    "version": "0.0.3",
    "first_released": "2021-01-21T04:42:40.342150Z",
    "status": ["Development Status :: 4 - Beta"]
  },
  {
    "name": "napari-compressed-labels-io",
    "summary": "Plugin exploring different options for reading and writing compressed and portable labels layers in napari.",
    "description": "# napari-compressed-labels-io\n\n[![License](https://img.shields.io/pypi/l/napari-compressed-labels-io.svg?color=green)](https://github.com/DragaDoncila/napari-compressed-labels-io/raw/master/LICENSE)\n[![PyPI](https://img.shields.io/pypi/v/napari-compressed-labels-io.svg?color=green)](https://pypi.org/project/napari-compressed-labels-io)\n[![Python Version](https://img.shields.io/pypi/pyversions/napari-compressed-labels-io.svg?color=green)](https://python.org)\n[![tests](https://github.com/DragaDoncila/napari-compressed-labels-io/workflows/tests/badge.svg)](https://github.com/DragaDoncila/napari-compressed-labels-io/actions)\n[![codecov](https://codecov.io/gh/DragaDoncila/napari-compressed-labels-io/branch/master/graph/badge.svg)](https://codecov.io/gh/DragaDoncila/napari-compressed-labels-io)\n\n\n## Description\n\nThis napari plugin provides readers and writers for labels and their corresponding image layers into zarr format for compression and portability. Each reader/writer pair supports a round trip of saving and loading image and labels layers.\n\n## Writers\nTwo writers are provided by this plugin, each with its own reader.\n\n### `labels_to_zarr`\nThis writer is an alternative to napari's default label writer and will write an entire labels layer, regardless of its dimensions, into a single zarr file. This writer provides the best compression option and its associated reader `get_zarr_labels` will read the layer back into napari.\n\nThis writer will be called when the user tries to save a selected labels layer into a path ending with .zarr\n\n### `label_image_pairs_to_zarr`\nThis writer will save 3-dimensional labels and image layers from the viewer into individual zarrs for portability and convenience. For example, given one labels and one image layer of the shape (10, 200, 200) saved to my_stacks.zarr, 10 subdirectories will be created, each with two zarrs inside of shape (200, 200) corresponding to the labels and image layer.\n\nThis writer allows users to load stacks of associated images, label them, and then quickly save these stacks out into individual slices for easy loading, viewing and interaction. Its associated reader supports the loading into napari of the whole stack, all layers at one slice of the stack, and an individual layer of a given slice of the stack.\n\nThe writer currently supports only 3D layers, with the exception of RGB images of the form (z, y, x, 3), which are also supported.\n\n\n## Readers\n\nTwo readers are provided by this plugin for loading the formats saved by each writer. These are detailed below.\n\n### `get_zarr_labels`\n\nThis reader will open any zarr file with a .zarray at the top level in `path` as a labels layer. This is to be used in conjunction with `labels_to_zarr`.\n\n\n### `get_label_image_stack`\n\nThis reader will open any zarr containing a `.zmeta` file as layers into napari. Depending on what is being opened, the reader will either load a full stack of labels and images, one slice of a stack of images and labels or an individual layer within a slice. This is to be used in conjunction with `label_image_pairs_to_zarr`.\n\n## .zmeta\n\nThis metadata file contains information about the layer types in the stack and in each individual slice, as well as the number of image/label slices. This allows the reader plugin to load the correct layer types with appropriate names both at a stack level and at the individual slice level.\n\n### An example .zmeta specification\n\n```json\n{\n    \"meta\": {\n        \"stack\": 7                               # number of slices in the entire stack (1 for an individual slice, 0 for a layer within a slice)\n    },\n    \"data\": {\n        \"image\" : [                              # all image layers must be listed here\n            {\n                \"name\": \"leaves_example_data\",\n                \"shape\": [790, 790, 3],\n                \"dtype\": \"uint8\",\n                \"rgb\": true                      # where rgb is false the image will be loaded as greyscale (colormap support has not yet been implemented)\n            }\n        ],\n        \"labels\" : [\n            {\n                \"name\": \"oak\",\n                \"shape\": [790, 790],\n                \"dtype\": \"int64\"\n            },\n            {\n                \"name\": \"bg\",\n                \"shape\": [790, 790],\n                \"dtype\": \"int64\"\n            }\n        ]\n    }\n}\n\n```\n\n\n----------------------------------\n\nThis [napari] plugin was generated with [Cookiecutter] using with [@napari]'s [cookiecutter-napari-plugin] template.\n\n<!--\nDon't miss the full getting started guide to set up your new package:\nhttps://github.com/napari/cookiecutter-napari-plugin#getting-started\n\nand review the napari docs for plugin developers:\nhttps://napari.org/docs/plugins/index.html\n-->\n\n## Installation\n\nYou can install `napari-compressed-labels-io` via [pip]:\n\n    pip install napari-compressed-labels-io\n\n## Contributing\n\nContributions are very welcome. Tests can be run with [tox], please ensure\nthe coverage at least stays the same before you submit a pull request.\n\n## License\n\nDistributed under the terms of the [MIT] license,\n\"napari-compressed-labels-io\" is free and open source software\n\n## Issues\n\nIf you encounter any problems, please [file an issue] along with a detailed description.\n\n[napari]: https://github.com/napari/napari\n[Cookiecutter]: https://github.com/audreyr/cookiecutter\n[@napari]: https://github.com/napari\n[MIT]: http://opensource.org/licenses/MIT\n[BSD-3]: http://opensource.org/licenses/BSD-3-Clause\n[GNU GPL v3.0]: http://www.gnu.org/licenses/gpl-3.0.txt\n[GNU LGPL v3.0]: http://www.gnu.org/licenses/lgpl-3.0.txt\n[Apache Software License 2.0]: http://www.apache.org/licenses/LICENSE-2.0\n[Mozilla Public License 2.0]: https://www.mozilla.org/media/MPL/2.0/index.txt\n[cookiecutter-napari-plugin]: https://github.com/napari/cookiecutter-napari-plugin\n[file an issue]: https://github.com/DragaDoncila/napari-compressed-labels-io/issues\n[napari]: https://github.com/napari/napari\n[tox]: https://tox.readthedocs.io/en/latest/\n[pip]: https://pypi.org/project/pip/\n[PyPI]: https://pypi.org/\n\n\n\ntext/markdown",
    "author": "Draga Doncila: ddoncila@gmail.com",
    "license": "MIT",
    "python_version": ">=3.6",
    "operating_system": ["Operating System :: OS Independent"],
    "release_date": "2021-03-03T20:41:59.257726Z",
    "version": "0.0.2",
    "first_released": "2021-02-23T01:34:32.478790Z",
    "status": ["Development Status :: 4 - Beta"]
  },
  {
    "name": "affinder",
    "summary": "Quickly find the affine matrix mapping one image to another using manual correspondence points annotation",
    "description": "# affinder\n\n[![License](https://img.shields.io/pypi/l/affinder.svg?color=green)](https://github.com/napari/affinder/raw/master/LICENSE)\n[![PyPI](https://img.shields.io/pypi/v/affinder.svg?color=green)](https://pypi.org/project/affinder)\n[![Python Version](https://img.shields.io/pypi/pyversions/affinder.svg?color=green)](https://python.org)\n[![tests](https://github.com/jni/affinder/workflows/tests/badge.svg)](https://github.com/jni/affinder/actions)\n[![codecov](https://codecov.io/gh/jni/affinder/branch/master/graph/badge.svg)](https://codecov.io/gh/jni/affinder)\n\nQuickly find the affine matrix mapping one image to another using manual correspondence points annotation\n\n----------------------------------\n\nThis [napari] plugin was generated with [Cookiecutter] using with [@napari]'s [cookiecutter-napari-plugin] template.\n\n<!--\nDon't miss the full getting started guide to set up your new package:\nhttps://github.com/napari/cookiecutter-napari-plugin#getting-started\n\nand review the napari docs for plugin developers:\nhttps://napari.org/docs/plugins/index.html\n-->\n\n## Installation\n\nYou can install `affinder` via [pip]:\n\n    pip install affinder\n\n## Contributing\n\nContributions are very welcome. Tests can be run with [tox], please ensure\nthe coverage at least stays the same before you submit a pull request.\n\n## License\n\nDistributed under the terms of the [BSD-3] license,\n\"affinder\" is free and open source software\n\n## Issues\n\nIf you encounter any problems, please [file an issue] along with a detailed description.\n\n[napari]: https://github.com/napari/napari\n[Cookiecutter]: https://github.com/audreyr/cookiecutter\n[@napari]: https://github.com/napari\n[MIT]: http://opensource.org/licenses/MIT\n[BSD-3]: http://opensource.org/licenses/BSD-3-Clause\n[GNU GPL v3.0]: http://www.gnu.org/licenses/gpl-3.0.txt\n[GNU LGPL v3.0]: http://www.gnu.org/licenses/lgpl-3.0.txt\n[Apache Software License 2.0]: http://www.apache.org/licenses/LICENSE-2.0\n[Mozilla Public License 2.0]: https://www.mozilla.org/media/MPL/2.0/index.txt\n[cookiecutter-napari-plugin]: https://github.com/napari/cookiecutter-napari-plugin\n[file an issue]: https://github.com/jni/affinder/issues\n[napari]: https://github.com/napari/napari\n[tox]: https://tox.readthedocs.io/en/latest/\n[pip]: https://pypi.org/project/pip/\n[PyPI]: https://pypi.org/\n\n\n\ntext/markdown",
    "author": "Juan Nunez-Iglesias: juan.nunez-iglesias@monash.edu",
    "license": "BSD-3",
    "python_version": ">=3.7",
    "operating_system": ["Operating System :: OS Independent"],
    "release_date": "2021-03-25T00:53:48.475737Z",
    "version": "0.2.0",
    "first_released": "2021-02-04T10:12:07.298699Z",
    "status": ["Development Status :: 3 - Alpha"]
  },
  {
    "name": "napari-lazy-openslide",
    "summary": "A plugin to lazily load multiscale whole-slide images with openslide and dask.",
    "description": "# napari-lazy-openslide\n\n[![License](https://img.shields.io/pypi/l/napari-lazy-openslide.svg?color=green)](https://github.com/manzt/napari-lazy-openslide/raw/master/LICENSE)\n[![PyPI](https://img.shields.io/pypi/v/napari-lazy-openslide.svg?color=green)](https://pypi.org/project/napari-lazy-openslide)\n[![Python Version](https://img.shields.io/pypi/pyversions/napari-lazy-openslide.svg?color=green)](https://python.org)\n[![tests](https://github.com/manzt/napari-lazy-openslide/workflows/tests/badge.svg)](https://github.com/manzt/napari-lazy-openslide/actions)\n\nAn experimental plugin to lazily load multiscale whole-slide tiff images with openslide and dask.\n\n----------------------------------\n\nThis [napari] plugin was generated with [Cookiecutter] using with [@napari]'s [cookiecutter-napari-plugin] template.\n\n<!--\nDon't miss the full getting started guide to set up your new package:\nhttps://github.com/napari/cookiecutter-napari-plugin#getting-started\n\nand review the napari docs for plugin developers:\nhttps://napari.org/docs/plugins/index.html\n-->\n\n## Installation\n\n**Step 1.)** Make sure you have OpenSlide installed. Download instructions [here](https://openslide.org/download/).\n\n> NOTE: Installation on macOS is easiest via Homebrew: `brew install openslide`. Up-to-date and multiplatform \n> binaries for `openslide` are also avaiable via `conda`: `conda install -c sdvillal openslide-python`\n\n**Step 2.)** Install `napari-lazy-openslide` via [pip]:\n\n    pip install napari-lazy-openslide\n\n## Usage\n\nThis plugin tries to be conservative with what files it will attempt to provide a reader.\nIt will only attempt to read `.tif` and `.tiff` files that `openslide` will open and are \ndetected as multiscale (`openslide.OpenSlide.level_count > 1`). Under the hood, \n`napari-lazy-openslide` wraps the `openslide` reader with a valid `zarr.Store` where each \neach pyramidal level is exposed as a separate `zarr.Array` with shape `(y,x,4)`.\n\nThe plugin is experimental and has only been tested with `CAMELYON16` and `CAMELYON17` datasets, \nwhich can be downloaded [here](https://camelyon17.grand-challenge.org/Data/).\n\n```bash\n$ napari tumor_004.tif\n```\n\n![Interactive deep zoom of whole-slide image](tumor_004.gif)\n\n## Contributing\n\nContributions are very welcome. Tests can be run with [tox], please ensure\nthe coverage at least stays the same before you submit a pull request.\n\n## License\n\nDistributed under the terms of the [BSD-3] license,\n\"napari-lazy-openslide\" is free and open source software\n\n## Issues\n\nIf you encounter any problems, please [file an issue] along with a detailed description.\n\n[napari]: https://github.com/napari/napari\n[Cookiecutter]: https://github.com/audreyr/cookiecutter\n[@napari]: https://github.com/napari\n[MIT]: http://opensource.org/licenses/MIT\n[BSD-3]: http://opensource.org/licenses/BSD-3-Clause\n[GNU GPL v3.0]: http://www.gnu.org/licenses/gpl-3.0.txt\n[GNU LGPL v3.0]: http://www.gnu.org/licenses/lgpl-3.0.txt\n[Apache Software License 2.0]: http://www.apache.org/licenses/LICENSE-2.0\n[Mozilla Public License 2.0]: https://www.mozilla.org/media/MPL/2.0/index.txt\n[cookiecutter-napari-plugin]: https://github.com/napari/cookiecutter-napari-plugin\n[file an issue]: https://github.com/manzt/napari-lazy-openslide/issues\n[napari]: https://github.com/napari/napari\n[tox]: https://tox.readthedocs.io/en/latest/\n[pip]: https://pypi.org/project/pip/\n[PyPI]: https://pypi.org/\n\n\n\ntext/markdown",
    "author": "Trevor Manz: trevor.j.manz@gmail.com",
    "license": "BSD-3",
    "python_version": ">=3.6",
    "operating_system": ["Operating System :: OS Independent"],
    "release_date": "2021-01-30T19:48:17.848849Z",
    "version": "0.2.0",
    "first_released": "2020-07-14T17:50:55.269908Z",
    "status": ["Development Status :: 4 - Beta"]
  }
]
